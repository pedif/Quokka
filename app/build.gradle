plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
}

android {
    namespace 'com.techspark.quokka'
    compileSdk 33
    def versionMajor = 1
    def versionMinor = 0
    def versionPatch = 14
    defaultConfig {
        applicationId 'com.techspark.quokka'
        minSdk 23
        targetSdk 33
        versionCode versionMajor * 10000 + versionMinor * 100 + versionPatch
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        testInstrumentationRunner "com.techspark.quokka.CustomTestRunner"
//        testInstrumentationRunner "com.example.android.hilt.HiltTestRunner"
        vectorDrawables {
            useSupportLibrary true
        }
//        manifestPlaceholders = [encoding: "some value", version: cityVersion]
    }

    buildTypes {

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            firebaseCrashlytics {
                mappingFileUploadEnabled true
            }
        }
        debug {
            minifyEnabled false
            firebaseCrashlytics {
                mappingFileUploadEnabled false
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion "$kotlin_compiler_version"
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

}
// Allow references to generated code
kapt {
    correctErrorTypes true
}
dependencies {

    implementation implementation(project(':day',))
    implementation(project(":core"))
    implementation(project(":statistics"))
    implementation(project(":home"))
    implementation(project(":revenue"))
    implementation(project(":notification"))
    implementation(project(":onboarding"))
    implementation "androidx.core:core-ktx:$core_ktx_version"
    implementation 'androidx.test.ext:junit-ktx:1.1.4'
    implementation project(path: ':core')
    implementation 'androidx.room:room-ktx:2.4.3'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'
    testImplementation 'junit:junit:4.12'

    def composeBom = platform('androidx.compose:compose-bom:2022.10.00')
    implementation composeBom
    androidTestImplementation composeBom

    implementation 'androidx.compose.material3:material3'

    // Android Studio Preview support
    implementation 'androidx.compose.ui:ui-tooling-preview'
    debugImplementation 'androidx.compose.ui:ui-tooling'

    //navigation
    implementation "androidx.navigation:navigation-compose:$nav_version"
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'

    // UI Tests
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"



    //hilt
    //hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    // Hilt testing dependency
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    // Make Hilt generate code in the androidTest folder
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_version"


    testImplementation "com.google.truth:truth:$truth_version"

    androidTestImplementation "com.google.truth:truth:$truth_version"



    // Optional - Included automatically by material, only add when you need
    // the icons but not the material library (e.g. when using Material3 or a
    // custom design system based on Foundation)
//    implementation 'androidx.compose.material:material-icons-core'
    // Optional - Add full set of material icons
//    implementation 'androidx.compose.material:material-icons-extended'
    // Optional - Add window size utils
    implementation 'androidx.compose.material3:material3-window-size-class'

    // Optional - Integration with activities
    implementation 'androidx.activity:activity-compose:1.5.1'
    // Optional - Integration with ViewModels
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.5.1'

    //Image library
    implementation "com.github.bumptech.glide:compose:1.0.0-alpha.1"


    implementation "com.jakewharton.timber:timber:$timber_version"

    implementation 'com.google.android.gms:play-services-ads:21.4.0'


    //Firebase
    implementation platform('com.google.firebase:firebase-bom:31.2.0')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'

}